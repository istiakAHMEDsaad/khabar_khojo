import { useEffect, useState } from 'react';
import axios from 'axios';
import { toast, Bounce } from 'react-toastify';
import MealCard from '../components/Card_Item/MealCard';
import { MoonLoader } from 'react-spinners';
import ReactPaginate from 'react-paginate';
import { useSearchParams } from 'react-router-dom';

const BrowsePage = () => {
  const [meal, setMeal] = useState([]);
  const [loading, setLoading] = useState(true);

  // React Router: manage query params
  const [searchParams, setSearchParams] = useSearchParams();
  const initialPage = parseInt(searchParams.get("page") || "1", 10); // default = page 1
  const [currentPage, setCurrentPage] = useState(initialPage - 1); // react-paginate is 0-based

  const itemsPerPage = 8;

  useEffect(() => {
    const mealData = async () => {
      try {
        const res = await axios.get(`${import.meta.env.VITE_apiUrl}`);
        setMeal(res?.data?.meals || []);
      } catch (err) {
        toast.error(err?.message, {
          position: 'top-right',
          autoClose: 3000,
          hideProgressBar: false,
          closeOnClick: false,
          pauseOnHover: true,
          draggable: true,
          progress: undefined,
          theme: 'light',
          transition: Bounce,
        });
      }
      setLoading(false);
    };
    mealData();
  }, []);

  // Pagination logic
  const offset = currentPage * itemsPerPage;
  const currentItems = meal.slice(offset, offset + itemsPerPage);
  const pageCount = Math.ceil(meal.length / itemsPerPage);

  const handlePageClick = ({ selected }) => {
    setCurrentPage(selected);
    setSearchParams({ page: (selected + 1).toString() }); // update URL
  };

  return (
    <section>
      <div>
        {/* Sidebar */}
        <div className='md:flex md:flex-col border-e border-gray-100 bg-white dark:bg-neutral-950 hidden'>
          <div className='px-4 py-6'>
            <ul className='mt-6 space-y-1'>
              <li>
                <label htmlFor='Search'>
                  <span className='text-sm font-medium text-gray-700'>Search</span>
                  <div className='relative'>
                    <input
                      type='text'
                      id='Search'
                      className='mt-0.5 w-full rounded border border-gray-300 pe-10 shadow-sm sm:text-sm h-8 pl-2'
                    />
                  </div>
                </label>
              </li>
            </ul>
          </div>
        </div>

        {/* Cards */}
        <div className='flex flex-col items-center justify-center'>
          {loading && (
            <MoonLoader loading={loading} size={40} color='rgba(12, 10, 9, 1)' />
          )}

          <div className='grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6 p-4'>
            {currentItems.map((item) => (
              <MealCard key={item?.idMeal} item={item} />
            ))}
          </div>

          {/* Pagination */}
          <div className='mt-6'>
            <ReactPaginate
              breakLabel='...'
              nextLabel='Next >'
              onPageChange={handlePageClick}
              pageRangeDisplayed={3}
              pageCount={pageCount}
              forcePage={currentPage} // <- keeps correct page active from URL
              previousLabel='< Prev'
              renderOnZeroPageCount={null}
              containerClassName='flex items-center space-x-2'
              pageClassName='px-3 py-1 border rounded-md cursor-pointer hover:bg-gray-200 dark:hover:bg-neutral-800'
              activeClassName='bg-black text-white dark:bg-white dark:text-black'
              previousClassName='px-3 py-1 border rounded-md cursor-pointer hover:bg-gray-200 dark:hover:bg-neutral-800'
              nextClassName='px-3 py-1 border rounded-md cursor-pointer hover:bg-gray-200 dark:hover:bg-neutral-800'
              disabledClassName='opacity-50 cursor-not-allowed'
            />
          </div>
        </div>
      </div>
    </section>
  );
};

export default BrowsePage;
